/*
Galio is a wrapper for Riot API written in Golang with support for the CommunityDragon CDN. It supports many features
such as multi-region rate-limiting, request recursion, support for CommunityDragon and more.

The wrapper has a few subpackages, which are the following:
*/
// - github.com/SKarajic/Galio/entities (this contains all the entities that are generated by the wrapper)
// - github.com/SKarajic/Galio/Regions (contains all the regions which are supported by RiotAPI)
// - github.com/SKarajic/Galio/ratelimiter (contains a RateLimiter used by Galio)
/*
There are a few more subpackages, however, these are meant for internal use. If you have any use for the subpackages
on their own, feel free to use them!

The source code can be found on https://github.com/SKarajic/Galio. Feel free to create a pull request and help out!

Galio isn’t endorsed by Riot Games and doesn’t reflect the views or opinions of Riot Games or anyone officially
involved in producing or managing League of Legends. League of Legends and Riot Games are trademarks or registered
trademarks of Riot Games, Inc. League of Legends © Riot Games, Inc.
*/
package Galio

import (
	"github.com/skarajic/galio/dto"
	"github.com/skarajic/galio/handlers"
	"github.com/skarajic/galio/regions"
)

type Galio dto.Galio
type SummonerInput dto.SummonerInput
type QueueInput dto.QueueInput

// Creates a new Galio wrapper entity, handling all the requests to the API
//
// parameters:
// - apiKey (string) : your API key
// - region (Region) : the region of choice (found in the github.com/SKarajic/Galio/regions package)
//
// returns: (Galio) the Galio wrapper object
func New(ApiKey string, Region regions.Region) Galio {
	return Galio{ApiKey: ApiKey, Region: Region}
}

// Returns a new SummonerDTO entity, containing all data of a summoner from a specific region
//
// parameters:
// - input (SummonerInput) : a SummonerInput entity containing either a summoner ID, summoner name or account ID
//
// returns: (SummonerDTO) returns a new SummonerDTO Object

func (g *Galio) GetSummoner(input SummonerInput) dto.SummonerDTO {
	return handlers.GetSummoner(dto.Galio(*g), dto.SummonerInput(input))
}

// Returns a new MatchListDTO entity, containing the summary of matches of a specific summoner
//
// parameters:
// - input (SummonerInput) : a SummonerInput entity containing either a summoner ID, summoner name or account ID
// - recent (boolean)      : a boolean to decide if the last 20 matches should be returned or all matches
//
// returns: (MatchListDTO) returns a new MatchListDTO Object filled with MatchReferenceDTO objects
func (g *Galio) GetMatchList(input SummonerInput, recent bool) dto.MatchListDTO {
	return handlers.GetMatchList(dto.Galio(*g), dto.SummonerInput(input), recent)
}

// Returns a new MatchListDTO entity, containing the data of a specific matches
//
// parameters:
// - matchId (uint64) : the ID of a match which you can obtain through the matchlist
//
// returns: (MatchListDTO) returns a new MatchListDTO Object filled with MatchReferenceDTO objects
func (g *Galio) GetMatch(matchId uint64) dto.MatchDTO {
	return handlers.GetMatch(dto.Galio(*g), matchId)
}
